--CARGA DE IMAGENES UTILIZANDO VARIABLES DE TIPO BLOB
CREATE OR REPLACE DIRECTORY IMAGENES_RESTAURANTE AS 'C:\imagenes_Proyecto_Bases_2\Restaurante\';



--CONECTARNOS CON EL USUARIO SYSTEM (TODO DESDE OTRO USUARIO SYSTEM OJO)------(OTORGAR PERMISOS AL USUARIO)
GRANT READ,WRITE ON DIRECTORY ONJETOS TO USER_PROYECTO;

--CREAMOS LA TABLA DONDE TENDREMOS LA IMAGEN

--En este caso ya la tenemos creada

--CREAMOS EL PROCESO PARA LA CARGA DE IMAGEN
DECLARE
    V_TEMP BLOB;    -- GUARDA TEMPORALMENTE LA VARIABLE QUE ESTA EN LA RUTA
    V_BFILE BFILE;  -- BUSCA EL ARCHIVO PARA SABER SI EXISTE
    V_NAME_IMAGE VARCHAR(20);   -- GUARDA EL NOMBRE DE LA IMAGEN

BEGIN
    --INSERT
            -- INSERT INTO CAR VALUES(100,'111','222',EMPTY_BLOB());  CON ESTA SENTENCIA PODEMOS COMPROBAR QUE SI SE INSERTA EN LA TABLA PERO VACIO EL ESPACIO DE LA IMAGEN
    INSERT INTO RESTAURANTE VALUES(4,'Los Pollos Hermanos4',EMPTY_BLOB()) Returning LOGO INTO V_TEMP;

    V_NAME_IMAGE := 'logo.jpg';

    V_BFILE := BFILENAME('IMAGENES_RESTAURANTE',V_NAME_IMAGE);   --SI LA IMAGEN (V_NAME_IMAGE) EXISTE EN EL DIRECTORIO (OBJETOS_LOB) SE GUARDA EN V_BFILE

    DBMS_LOB.OPEN(V_BFILE,DBMS_LOB.LOB_READONLY);       --LUEGO SE ABRE LA IMAGEN (V_BFILE) COMO LECTURA

    DBMS_LOB.LOADFROMFILE(V_TEMP,V_BFILE,DBMS_LOB.GETLENGTH(V_BFILE));      --GUARDAMOS SOBRE (V_TEMP) LA IMAGEN ENCONTRADA (V_BFILE) Y EL TAMANO EN MB O KB

    DBMS_LOB.CLOSE(V_BFILE);        --CERRAMOS LA VARIABLE V_BFILE

    COMMIT;

END;


create or replace procedure probando_cursor_con_datos(cl in out SYS_REFCURSOR, id_var number) is 
    begin 
        open cl for
        select * from restaurante
        where id = id_var;
    end;









select * from restaurante